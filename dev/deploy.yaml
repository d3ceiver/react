apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-app
  namespace: node-js
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-app
  template:
    metadata:
      labels:
        app: react-app
    spec:
      hostNetwork: true
      containers:
        - name: react-container
          image: node:14.17.0  # Use a specific image version
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Starting deployment script..." && \
              apt-get update && \
              apt-get install -y nano sshpass openssh-client && \
              echo "Installed required packages" && \
              if [ -d /app ]; then \
                rm -rf /app/*; \
              fi && \
              echo "Cleaned up /app directory" && \
              echo "m" > /tmp/.passwd && \
              sshpass -f /tmp/.passwd scp -r -o StrictHostKeyChecking=no manager@master:/home/manager/app/* /app/ && \
              rm /tmp/.passwd && \
              echo "Files copied successfully" && \
              cd /app && \
              echo "Current directory (post-copy): $(pwd)" && \
              ls -la /app && \
              rm -rf node_modules && rm -f package-lock.json && \
              echo "Removed node_modules and package-lock.json" && \
              npm install && \
              echo "Reinstalled dependencies" && \
              npm install -g npm@10.9.0 && \
              npm install -g create-vite typescript && \
              echo "Global packages installed" && \
              cd /app && \
              echo "Current directory (pre-vite): $(pwd)" && \
              npm run dev -- --host 0.0.0.0 --port 3000
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /app
              name: react-volume
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 20
      nodeSelector:
        kubernetes.io/hostname: slave2
      volumes:
        - name: react-volume
          persistentVolumeClaim:
            claimName: react-app-pvc


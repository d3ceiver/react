apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-app
  namespace: node-js
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-app
  template:
    metadata:
      labels:
        app: react-app
    spec:
      initContainers:
        - name: init-volume
          image: busybox
          command: ['sh', '-c', 'while [ ! -d /app/src ]; do echo "Waiting for volume to mount..."; sleep 1; done;']
          volumeMounts:
            - mountPath: /app
              name: react-volume
      containers:
        - name: react-container
          image: node:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
              apt-get update && \
              apt-get install -y nano && \
              npm install -g npm@10.9.0 && \
              npm install -g create-vite ts-node typescript && \
              cd /app/src && \
              if [ -f script.ts ]; then \
                echo "Running script.ts"; \
                npx ts-node script.ts; \
              else \
                echo "script.ts not found"; \
              fi && \
              chmod +x ./node_modules/.bin/vite && \
              npm run dev -- --host 192.168.0.162 --port 3000
          ports:
            - containerPort: 3000
              protocol: TCP
            - containerPort: 5000
              protocol: TCP
          volumeMounts:
            - mountPath: /app
              name: react-volume
      nodeSelector:
        kubernetes.io/hostname: slave2
      volumes:
        - name: react-volume
          persistentVolumeClaim:
            claimName: react-app-pvc
